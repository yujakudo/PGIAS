VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shIndivMap"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True

'   入力項目をクリアする
Private Sub clearInputs()
    Range(R_IndivMapTypeSelect).Value = ""
    Range(R_IndivMapIndivSelect).Value = ""
    chkShowPrediction.Value = True
End Sub

'   マップを作るボタン
Private Sub btnMakeMap_Click()
    Call makeMap
End Sub

'   リセット
Private Sub btnReset_Click()
    Call doMacro(msgstr(msgReseting, name))
    Call clearInputs
    Call setMarker(ChartObjects(1))
    Call doMacro
End Sub

'   予測表示
Private Sub chkShowPrediction_Click()
    Call Worksheet_Change(Range(R_IndivMapIndivSelect))
End Sub

'   マップを作る
Public Sub makeMap()
    Dim cho As ChartObject
    Dim settings As Object
    
'    If Not shIndividual.checkPL() Then Exit Sub
    Call doMacro(msgstr(msgMaking, name))
    Set settings = getSettings(R_IndivMapSettings)
'    Call shIndividual.calcAllIndividualTable
    Call clearInputs
    Call makeOrgTable
    Set cho = ChartObjects(1)
    With Range(R_IndivMapTable)
        Call SetSourceData(cho, Range( _
            .cells(1, 3), .cells(.rows.count, 4)))
    End With
    With Range(R_IndivMapTable).Offset(-1, 0)
        Call setMarkerLabels(cho, _
            .cells(1, 1), .cells(1, 2), .cells(1, 5), settings(C_LabelAlign))
    End With
    Call setAxisLabel(cho, settings(C_XAxis), settings(C_YAxis))
    Call doMacro
End Sub

'   以降全てを更新
Private Sub cmdAllUpdate_Click()
    Call shIndivMap.makeMap
    Call doMacro(msgAllRecalc)
    Call shGymEffective.calcAll
'    Call SetAllRanking(shMatchEffective, ME_R_Settngs, C_IdMtc)
    Call doMacro
    Call shNewEntries.makeNewEntries
End Sub

'   タイプ選択・個体選択のセルの変更
Private Sub Worksheet_Change(ByVal Target As Range)
    Call doMacro("チャートを設定しています。")
    Call CheckEmpasis(Target, ChartObjects(1), _
                R_IndivMapTypeSelect, R_IndivMapIndivSelect, chkShowPrediction.Value)
    Call doMacro
End Sub

'   個体マップをすべてクリア
Public Sub ClearIndivMap()
    Call DeleteSourceData(ChartObjects(1))
    Call clearInputs
    Range(R_IndivMapTable).ClearContents
End Sub

'   列インデックスの配列を取得する
'   (0)は引数の列インデックス、(1)はX軸の現在と予測、(2)はY軸の現在と予測
Private Function getAxisColIndex(ByVal paramCol As Variant)
    Dim colSet, colRet, colNames As Variant
    Dim colName As String
    Dim settings As Object
    Dim xy, np, i As Integer
    Dim lo As ListObject
    Dim colIdx() As Long
    
    Set lo = shIndividual.ListObjects(1)
    Set settings = getSettings(R_IndivMapSettings)
    colSet = Array( _
        Array(settings(C_XAxis), settings(C_XPrediction)), _
        Array(settings(C_YAxis), settings(C_YPrediction)) _
    )
    colRet = Array(Array(), Array(Array(), Array()), Array(Array(), Array()))
    ReDim colIdx(UBound(paramCol))
    For i = 0 To UBound(paramCol)
        colIdx(i) = getColumnIndex(paramCol(i), lo)
    Next
    
    colRet(0) = colIdx
    For xy = 1 To 2
        For np = 0 To 1
            colName = colSet(xy - 1)(np)
            If InStr(colName, "*") < 1 Then
                colRet(xy)(np) = getColumnIndex(colName, lo)
            Else
                colRet(xy)(np) = Array( _
                    getColumnIndex(Replace(colName, "*", "1"), lo), _
                    getColumnIndex(Replace(colName, "*", "2"), lo) _
                )
            End If
        Next
    Next
    getAxisColIndex = colRet
End Function

'   再入してツリー構造の列インデックスより値とアドレスを取得
Private Sub getValAndAddr(ByVal row As Long, ByRef colIdx As Variant, _
            ByRef val As Variant, ByRef addr As Variant)
    Dim arrVal() As Variant
    Dim arrAddr() As Variant
    Dim lim As Long
    If IsArray(colIdx) Then
        lim = UBound(colIdx)
        ReDim arrVal(lim), arrAddr(lim)
        For i = 0 To lim
            Call getValAndAddr(row, colIdx(i), arrVal(i), arrAddr(i))
        Next
        val = arrVal: addr = arrAddr
    Else
        With shIndividual.cells(row, colIdx)
            val = .Value
            addr = "=" & shIndividual.name & "!" & Replace(.Address, shname, "")
        End With
    End If
End Sub

'   元表を作る
Private Sub makeOrgTable()
    Dim srow, i As Long
    Dim celMap1, celMap As Range
    Dim colIdx, val, addr, mval, maddr As Variant
    Dim newr As String
    Dim xy, np As Integer
    
    Range(R_IndivMapTable).Value = ""
    Set celMap1 = Range(R_IndivMapTable).cells(1, 1).Offset(-1, 0)
'    colNames = Array(IND_Nickname, IND_Species, IND_Endurance, _
'            IND_GymSpecialAtk1CDPS, IND_GymSpecialAtk2CDPS, _
'            IND_prEndurance, IND_prCDPS, IND_PL, IND_prPL)
    colIdx = getAxisColIndex(Array(IND_Nickname, IND_Species, IND_PL, IND_prPL))
    
    With shIndividual
        srow = .ListObjects(1).DataBodyRange.row
        Set celMap = celMap1
        While .cells(srow, 1).Text <> ""
            '   列インデックスにあたる値とアドレスの取得
            Call getValAndAddr(srow, colIdx, val, addr)
            If val(0)(0) = "" Or val(0)(2) = 0 Then
                GoTo Continue
            End If
            '   XY軸、現在・予測の下の値が配列なら、最大値取得
            For xy = 1 To 2
                For np = 0 To 1
                    If IsArray(val(xy)(np)) Then
                        mval = 0: maddr = ""
                        For i = 0 To UBound(val(xy)(np))
                            If i = 0 Or (val(xy)(np)(i) <> "" And mval < val(xy)(np)(i)) Then
                                mval = val(xy)(np)(i)
                                maddr = addr(xy)(np)(i)
                            End If
                        Next
                        val(xy)(np) = mval: addr(xy)(np) = maddr
                    End If
                Next
            Next
            '   現在値の書き込み
            Set celMap = celMap.Offset(1, 0)
            With celMap
                .Value = val(0)(0) & " l." & val(0)(2)
                .Offset(0, 1).Value = val(0)(1)
                .Offset(0, 2).Value = val(1)(0)
                .Offset(0, 3).Value = val(2)(0)
                .Offset(0, 4).Value = 0
            End With
            '   あれば予測値の書き込み
            If val(1)(1) <> "" And val(2)(1) <> "" Then
                Set celMap = celMap.Offset(1, 0)
                With celMap
                    .Value = val(0)(0) & " l." & val(0)(3)
                    .Offset(0, 1).Value = val(0)(1)
                    .Offset(0, 2).Value = val(1)(1)
                    .Offset(0, 3).Value = val(2)(1)
                    .Offset(0, 4).Value = 1
                End With
            End If
Continue:
            srow = srow + 1
        Wend
    End With
    Set celMap1 = celMap1.Offset(1, 0)
    Set celMap = celMap.Offset(0, 4)
    newr = "=" & name & "!"
    newr = newr & Replace(Range(celMap1, celMap).Address, newr, "")
    ActiveWorkbook.names(R_IndivMapTable).RefersTo = newr
End Sub
