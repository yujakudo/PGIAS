VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shSpeciesAnalysis1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True

'   cDPSの表示順位数
Const cdps_ranks As Long = 5


'   シートアクティブ
'   コンボボックスの設定
Private Sub Worksheet_Activate()
    Call setComboMenuOfSpeciesTable(Me, cmbJump)
End Sub

'   移動コンボボックスの変更
Private Sub cmbJump_Change()
    Call execCombCommand(Me, cmbJump, chkSameType.value)
End Sub

'   新しい種族の行を加える（種族シートがソートされている必要がある）
Public Sub addNewSpecies(Optional ByVal withLimitedAtk As Boolean = True)
    Dim row, col As Long
    
    doMacro msgSetNewSpeciesToSpeciesAnalysis1Sheet
    Call sortNormally
    Call copyNames
    With ListObjects(1).DataBodyRange
        col = getColumnIndex(SA1_ATKPower, .Parent)
        row = 1
        Do While .cells(row, 1).text <> ""
            If .cells(row, col).text = "" Then
                Call makeWeakness(row)
                Call makeParameters(row)
                Call makeAtkAna(C_IdGym, cdps_ranks, row, withLimitedAtk)
                Call makeAtkAna(C_IdMtc, cdps_ranks, row, withLimitedAtk)
                Call makeLeagueIVRank(row)
            End If
            row = row + 1
        Loop
    End With
    '   種族マップ
    Call shSpeciesMap.MakeMap
    Call doMacro
End Sub

'   コントロールのクリア
Public Sub clearControls()
    chkSameType.value = False
    Call resetTableFilter(Me)
    Call sortNormally
End Sub

'   表を作り直す（時間が掛かる）
Public Sub makeTableSpeciesAna1( _
            Optional ByVal withLimitedAtk As Boolean = True)
    Call doMacro(msgstr(msgMakingSheet, name))
    Call makeHeader(cdps_ranks)
    Call clearSheet
    Call copyNames
    Call makeWeakness
    Call makeParameters
    Call makeAtkAna(C_IdGym, cdps_ranks, 0, withLimitedAtk)
    Call makeAtkAna(C_IdMtc, cdps_ranks, 0, withLimitedAtk)
    Call makeLeagueIVRank
    '   種族マップ
    Call shSpeciesMap.MakeMap
    Call doMacro
End Sub

Private Sub clearSheet()
    Dim cel As Range
    With ListObjects(1)
        Set cel = cells(.HeaderRowRange.row + 1, 1)
        If Not .DataBodyRange Is Nothing Then
            .DataBodyRange.ClearContents
        End If
        cel.value = 1   '   DataBodyRangeをつくる
        .Resize Range(.HeaderRowRange.cells(1, 1), _
                cel.Offset(0, .HeaderRowRange.columns.count - 1))
    End With
End Sub

'   番号、種族名、タイプをコピーする
Private Sub copyNames()
    Dim row, ccolor(2), i, ti As Long
    Dim types(2), species, ref As String
    Dim ana As Range
    '   番号、種族名、タイプの列は決め打ち
    Set ana = ListObjects(1).DataBodyRange
    Call shSpecies.sortNormally
    With shSpecies.ListObjects(1).DataBodyRange
        For row = 1 To .rows.count
            species = .cells(row, 2).text
            ref = ana.cells(row, 2).text
            If species <> ref Then
                If ref <> "" Then
                    .rows(row).Insert
                End If
                ana.cells(row, 1).value = .cells(row, 1).value
                ana.cells(row, 2).value = species
                Erase types
                For i = 0 To 1
                    types(i) = .cells(row, i + 3).text
                Next
                Call setTypeToCell(types, ana.cells(row, 3), True)
            End If
        Next
    End With
End Sub

Private Function getRowRange(ByVal srow As Long) As Variant
    If srow = 0 Then
        getRowRange = Array(1, ListObjects(1).DataBodyRange.rows.count)
    Else
        getRowRange = Array(srow, srow)
    End If
End Function

'   弱点・耐性の表を作る
Private Sub makeWeakness(Optional ByVal srow As Long = 0)
    Dim nameCol As Long
    Dim row, tsrow, ti1, ti2, i, j As Long
    Dim srcCols, destCols As Variant
    Dim species, ts, str As String
    Dim srcRng As Range
    Dim rowr As Variant
    rowr = getRowRange(srow)
    
    nameCol = getColumnIndex(SA1_Name, shSpeciesAnalysis1)
    srcCols = Array(CBT_DoubleWeak, CBT_SingleWeak, CBT_SingleToler, _
                    CBT_DoubleToler, CBT_OverToler)
    destCols = Array(SA1_DoubleWeak, SA1_SingleWeak, SA1_SingleToler, _
                    SA1_DoubleToler, SA1_OverToler)
    srcCols = getColumnIndexes(shClassifiedByType, srcCols)
    destCols = getColumnIndexes(ListObjects(1), destCols)
    Set srcRng = shClassifiedByType.ListObjects(1).DataBodyRange
    With shSpeciesAnalysis1.ListObjects(1).DataBodyRange
        For row = rowr(0) To rowr(1)
            species = .cells(row, nameCol).text
            ts = getJoinedTypeName(species)
            tsrow = searchRow(ts, CBT_Type, shClassifiedByType)
            If tsrow = 0 Then
                MsgBox ("makeWeaknessでタイプが見つからない")
            End If
            For i = 0 To UBound(srcCols)
                str = srcRng.cells(tsrow, srcCols(i)).text
                .cells(row, destCols(i)).value = str
                If str <> "" Then
                    For j = 1 To Len(str)
                        .cells(row, destCols(i)) _
                            .Characters(start:=j, Length:=1) _
                            .Font.Color _
                        = srcRng.cells(tsrow, srcCols(i)) _
                            .Characters(start:=j, Length:=1) _
                            .Font.Color
                    Next
                End If
            Next
        Next
    End With
End Sub

'   パラメータを計算して埋める
Private Sub makeParameters(Optional ByVal srow As Long = 0)
    Dim row, colATKP, colDEFP, colHP, colCP, colSCP, colDCP, colEND As Long
    Dim species As String
    Dim hp, def, atk, endur, scp, DCP As Double
    Dim cels As Variant
    Dim rowr As Variant
    rowr = getRowRange(srow)
    cels = getColumnIndexes(shSpeciesAnalysis1, _
            Array(SA1_ATKPower, SA1_DEFPower, SA1_HP, _
                SA1_CP, SA1_SCP, SA1_DCP, SA1_Endurance))
    With ListObjects(1).DataBodyRange
        For row = rowr(0) To rowr(1)
            species = .cells(row, 2).text
            hp = getPower(species, "HP", 15, 40)
            def = getPower(species, "DEF", 15, 40)
            atk = getPower(species, "ATK", 15, 40)
            .cells(row, cels(0)).value = atk
            .cells(row, cels(1)).value = def
            .cells(row, cels(2)).value = hp
            .cells(row, cels(3)).value = atk * Sqr(def) * Sqr(hp) / 10
            .cells(row, cels(4)).value = (atk * def * hp) ^ (2 / 3) / 10
            .cells(row, cels(5)).value = (atk * def ^ 2 * hp ^ 2) ^ (2 / 5) / 10
            .cells(row, cels(6)).value = getEndurance(def, hp)
        Next
    End With
End Sub

'   わざ分析の作成
Private Sub makeAtkAna(Optional ByVal mode As Integer = C_IdGym, _
                Optional ByVal rnks As Long = 3, _
                Optional ByVal srow As Long = 0, _
                Optional ByVal withLimited As Boolean = True)
    Dim row, scol, col, i, j, atkClass, idx, num As Long
    Dim TCPcols As Variant
    Dim species As String
    Dim param As Variant
    Dim AtkParam() As AttackParam
    Dim cdpss() As CDpsSet
    Dim atkName As String
    Dim ana(2) As Double
    Dim mval(2, 1) As Variant
    Dim rowr As Variant
    
    Call makeInfluenceCache
    rowr = getRowRange(srow)
    scol = getColumnIndex( _
            Array(SA1_GymBattle, SA1_MtcBattle)(mode), ListObjects(1)) + 1
    TCPcols = getColumnIndexes(ListObjects(1), _
            Array(Array(SA1_gTCP, SA1_mTCP)(mode), SA1_Endurance))
    '   ループ
    With ListObjects(1).DataBodyRange
        For row = rowr(0) To rowr(1)
            species = .cells(row, 2).text
            Erase AtkParam, cdpss
            Call getAtkAna(AtkParam, cdpss, mode, species, withLimited)
            '   各わざの最大値の探索
            '   書き込み列の先頭
            col = scol
            idx = 0
            For atkClass = 0 To 1
                Erase mval
                Do While idx <= UBound(AtkParam)
                    If atkClass <> AtkParam(idx).class Then Exit Do
                    With AtkParam(idx)
                        atkName = .name
                        ana(0) = .damage
                        ana(1) = .damageEfc
                        ana(2) = .chargeEfc
                        idx = idx + 1
                    End With
                    For j = 0 To 2 - atkClass ' ゲージにはチャージ効率はない
                        '   最大値より大きかったら更新
                        If ana(j) > mval(j, 1) Then
                            mval(j, 0) = atkName: mval(j, 1) = ana(j)
                        '   最大値と同じであったら、名前を加えておく
                        ElseIf ana(j) <> 0 And ana(j) = mval(j, 1) Then
                            mval(j, 0) = mval(j, 0) & "," & atkName
                        End If
                    Next
                Loop
                '   書き込み
                For j = 0 To 2 - atkClass
                    If Not IsEmpty(mval(j, 0)) Then
                        Call setAtkNames(atkClass, mval(j, 0), .cells(row, col))
                        .cells(row, col + 1).value = mval(j, 1)
                    End If
                    col = col + 2
                Next
            Next
            '   cDPSランクの書き込み
            num = UBound(cdpss)
            For i = 0 To rnks - 1
                idx = i '  lastの領域削除の為  If i < rnks Then idx = i Else idx = num
                If idx <= num Then
                    Call setAtkNames(C_IdNormalAtk, cdpss(idx).natk, .cells(row, col))
                    Call setAtkNames(C_IdSpecialAtk, cdpss(idx).satk, .cells(row, col + 1))
                    .cells(row, col + 2).value = cdpss(idx).cDPS
                    .cells(row, col + 3).value = cdpss(idx).Cycle
                Else
                    Range(.cells(row, col), .cells(row, col + 3)).ClearContents
                End If
                col = col + 4
            Next
            '   パラメータの領域の、gTCP/mTCP
            .cells(row, TCPcols(0)).value = cdpss(0).cDPS * .cells(row, TCPcols(1)).value
        Next    '   row
    End With
End Sub

'   ヘッダの作成
Private Sub makeHeader(Optional ByVal cdps_ranks As Long = 3)
    Dim hTop, hAna, hAnaT, hDcp, btlTitle, btlName, hRcmIV As Variant
    Dim hDcpT, sn As String
    Dim row, col, i, n, blt, j As Long

    hTop = Array(SA1_Number, SA1_Name, SA1_Type, SA1_DoubleWeak, _
                SA1_SingleWeak, SA1_SingleToler, SA1_DoubleToler, _
                SA1_OverToler, SA1_ATKPower, SA1_DEFPower, SA1_HP, _
                SA1_CP, SA1_SCP, SA1_DCP, SA1_Endurance, SA1_gTCP, SA1_mTCP)
    hAna = Array(SA1_NA_DamageAtkName, SA1_NA_DamageValue, _
                SA1_NA_DpsAtkName, SA1_NA_DpsValue, _
                SA1_NA_EpsAtkName, SA1_NA_EpsValue, _
                SA1_SA_DamageAtkName, SA1_SA_DamageValue, _
                SA1_SA_DpsAtkName, SA1_SA_DpsValue)
    hAnaT = Array(SA1_NA_Damage, SA1_NA_Dps, SA1_NA_Eps, _
                SA1_SA_Damage, SA1_SA_Dps)
    hDcp = Array(SA1_CDSP_NormalAtkName, SA1_CDSP_SpecialAtkName, _
                SA1_CDSP_Value, SA1_CDSP_Cycle)
    hDcpT = SA1_cDpsRank
    btlTitle = Array(SA1_GymBattleT, SA1_MtcBattleT)
    btlName = Array(SA1_GymBattle, SA1_MtcBattle)
    hRcmIV = Array(SA1_ReccIV, SA1_ReccIVlim, SA1_ReccTCP, SA1_ReccTCPmin)
    row = ListObjects(1).HeaderRowRange.row
    col = 1
    '   先頭の情報
    For i = 0 To UBound(hTop)
        If hTop(i) = SA1_DoubleWeak Then cells(row - 1, col).value = SA1_Weakness
        If hTop(i) = SA1_SingleToler Then cells(row - 1, col).value = SA1_Tolerance
        If hTop(i) = SA1_ATKPower Then cells(row - 1, col).value = SA1_Param
        cells(row, col).value = hTop(i)
        col = col + 1
    Next
    '   わざの解析値
    For btl = 0 To 1
        '   TBでのタイトルの修正
        If btl = 1 Then
            For j = 0 To UBound(hAna)
                hAna(j) = Replace(hAna(j), "_g", "_m")  '   サフィックスの変換
                If InStr(hAna(j), "sDps") Then  '   ゲージ技のDPSなら
                    hAna(j) = Replace(hAna(j), "PS", "PE")  '   DPEにする
                Else
                    hAna(j) = Replace(hAna(j), "PS", "PT") '   PSをPTにする
                End If
            Next
            For j = 0 To UBound(hAnaT)
                If hAnaT(j) = SA1_SA_Dps Then
                    hAnaT(j) = Replace(hAnaT(j), "PS", "PE")
                Else
                    hAnaT(j) = Replace(hAnaT(j), "PS", "PT")
                End If
            Next
            hDcpT = Replace(hDcpT, "PS", "PT")
            For j = 0 To UBound(hDcp)
                hDcp(j) = Replace(hDcp(j), "PS", "PT")
                hDcp(j) = Replace(hDcp(j), "_g", "_m")
            Next
        End If
        '   バトルの種類
        cells(row - 1, col).value = btlTitle(btl)
        cells(row, col).value = btlName(btl)
        col = col + 1
        '   解析値
        For i = 0 To UBound(hAna)
            cells(row, col).value = hAna(i)
            If i Mod 2 = 0 Then
                cells(row - 1, col).value = hAnaT(Int(i / 2))
            End If
            col = col + 1
        Next
        '   cDPS
        For n = 1 To cdps_ranks
            sn = Trim(str(n))
            cells(row - 1, col).value = hDcpT & sn
            For i = 0 To UBound(hDcp)
                cells(row, col).value = hDcp(i) & sn
                col = col + 1
            Next
        Next
    Next
    '   おすすめ個体値
    cells(row - 1, col).value = SA1_ReccomendedIV1
    cells(row, col).value = SA1_ReccomendedIV2
    col = col + 1
    For i = 1 To 3
        cells(row - 1, col).value = Array(C_League1, C_League2, C_League3)(i - 1)
        For j = 0 To UBound(hRcmIV)
            cells(row, col).value = hRcmIV(j) & Trim(i)
            col = col + 1
        Next
    Next
    '   接尾辞の非表示
    If Not shControls.chkShowSuffix Then
        Call switchHeaderSuffixes(False)
    End If
End Sub

'   ソート
Sub sortNormally()
    Call sortTable(shSpeciesAnalysis1, Array(SPEC_Number, SPEC_Name))
End Sub

'   リーグ別おすすめ個体値の作成
Private Sub makeLeagueIVRank(Optional ByVal srow As Long = 0, _
                            Optional ByVal rnkNum As Integer = 50, _
                            Optional ByVal lrnkNum As Integer = 20)
    Dim rowr, cols, attr, tCP, rnks As Variant
    Dim i, j As Integer
    Dim species, str As String
    Dim mon As Monster
    Dim enemy As Monster
    Dim cdpss As CDpsSet
    
    rowr = getRowRange(srow)
    cols = getColumnIndexes(shSpeciesAnalysis1, _
            Array(SA1_ReccIV & "1", SA1_ReccIV & "2", SA1_ReccIV & "3", _
            SA1_Name, _
            SA1_CDST_NormalAtkName & "1", SA1_CDST_SpecialAtkName & "1"))
    tCP = Array(C_UpperCPl1, C_UpperCPl2, 0)
    Call getMonsterByPower(enemy)
    '   各行ループ
    With ListObjects(1).DataBodyRange
        For row = rowr(0) To rowr(1)
            '   計算用モンスター生成
            species = .cells(row, cols(3)).text
            Call getMonster(mon, species)
            '   技は、最強、最弱の順
            Call setAttacks(C_IdMtc, mon, _
                    Array(.cells(row, cols(4)).text), _
                    Array(.cells(row, cols(5)).text))
            '   リーグごとループ
            For i = 2 To 0 Step -1
                With .cells(row, cols(i))
                    Range(.Offset(0, 0), .Offset(0, 3)).ClearContents
                    rnks = getFitIndiv(mon, tCP(i), rnkNum, lrnkNum)
                    If IsArray(rnks) Then
                        .value = getIvStr(rnks(0), rnks(2)(3))
                        If rnks(0)(0)(0) < 15 Or rnks(0)(0)(1) < 15 Or rnks(0)(0)(2) < 15 Then
                            .Offset(0, 1).value = getIvStr(rnks(1), rnks(2)(3))
                        End If
                        .Offset(0, 2).value = rnks(0)(0)(3) '   mTCP
                        .Offset(0, 3).value = rnks(2)(3)    '   mTCP(min)
                        Range(.Offset(0, 0), .Offset(0, 1)).WrapText = False
                        '   最大個体を再現
'                        mon.PL = rnks(0)(0)(5): mon.indATK = rnks(0)(0)(0)
'                        mon.indDEF = rnks(0)(0)(1): mon.indHP = rnks(0)(0)(2)
'                        Call calcMonPowers(mon)
'                        cdpss = calcCDPS(mon, enemy, True)
'                        .Offset(0, 4).value = cdpss.cDPS
'                        .Offset(0, 5).value = getEndurance(mon.defPower, mon.hpPower)
                    End If
                End With
            Next
        Next
    End With
End Sub

'   個体値ランク配列を文字列にする
Private Function getIvStr(ByRef rnk As Variant, ByVal min As Double) As String
    Dim i, drv As Long
    Dim ratio, width, curr As Double
'    If Not IsArray(rnk) Then Exit Function
    width = rnk(0)(3) - min
    curr = 0.95
    For i = 0 To UBound(rnk)
'        drv = rnk(i)(3)
        ratio = (rnk(i)(3) - min) / width
        If ratio <= 0 Then Exit For
        If curr >= ratio Then
            If getIvStr <> "" Then getIvStr = getIvStr & vbCrLf
'            getIvStr = getIvStr & drv & ": "
            curr = curr - 0.05
        End If
        getIvStr = getIvStr & Hex(rnk(i)(0)) & Hex(rnk(i)(1)) & Hex(rnk(i)(2)) & ", "
    Next
End Function

Public Function getAtkRankingNum() As Integer
    getAtkRankingNum = cdps_ranks
End Function
