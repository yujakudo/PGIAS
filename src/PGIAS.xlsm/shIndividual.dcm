VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shIndividual"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True

'   フラグ
Enum IND_CalsFlags
    F_CURRENT = 1
    F_PREDICTION = 2
    F_FORCEALL = 3
End Enum

'   シートアクティブ
'   コンボボックスの設定
Private Sub Worksheet_Activate()
    Call setComboMenu(cmbJump, _
            Array(shSpecies, shSpeciesAnalysis1, _
                    shNormalAttack, shSpecialAttack), _
            Array(IMAP_R_Settings), _
            Array(cmdFilterReset, cmdSortReset))
End Sub

'   移動コンボボックスの変更
Private Sub cmbJump_Change()
    Call execCombCommand(Me, cmbJump, chkSameType.value, Range(IND_R_FilterIndicator))
End Sub

'   リーグ別目標設定ボタン
Private Sub btnSetTarget_Click()
    Call setTargetPL(Selection)
End Sub

'   セルの選択
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim tcol As String
    '   複数セル選択か、テーブルデータの選択でないなら終了
    If Target.CountLarge <> 1 Or _
        Application.Intersect(Target, ListObjects(1).DataBodyRange) Is Nothing Then Exit Sub
    Call setInputList   '   前の入力規則のクリア
    tcol = ListObjects(1).HeaderRowRange.cells(1, Target.column).text
    '   タイプ2の選択
    If tcol = IND_Type2 Then
        Call Type2Selected(Target)
    '   種族名
    ElseIf tcol = IND_Species Then
        Call speciesSelected(Target)
    '   わざ
    ElseIf tcol = IND_NormalAtk Or tcol = IND_SpecialAtk1 Or tcol = IND_SpecialAtk2 _
            Or tcol = IND_TargetNormalAtk Or tcol = IND_TargetSpecialAtk Then
        Call AtkSelected(Target)
    End If
End Sub

'   セル値の変更
Private Sub Worksheet_Change(ByVal Target As Range)
    Dim tcol As String
    If Not Application.Intersect(Target, Range(IND_R_FilterIndicator)) Is Nothing Then
        Call setFilter(Target)
        Exit Sub
    End If
    If Application.Intersect(Target, ListObjects(1).DataBodyRange) Is Nothing Then Exit Sub
    '   全角スペースのみはクリア
    If Target.text = "　" Then Target.ClearContents: Exit Sub
    tcol = ListObjects(1).HeaderRowRange.cells(1, Target.column).text
    ' タイプ1,2
    If tcol = IND_Type1 Or tcol = IND_Type2 Then
        Call TypeChange(Target)
    '   種族名
    ElseIf tcol = IND_Species Then
            Call speciesChange(Target)
    '   PL
    ElseIf tcol = IND_CP Or tcol = IND_HP Or tcol = IND_fixPL Or tcol = IND_TargetPL Then
        shIndividual.Calculate
        Call enableEvent(False)
        Call setAtkParams(Target)
        Call enableEvent(True)
    '   個体値
    ElseIf tcol = IND_indATK Or tcol = IND_indDEF Or tcol = IND_indHP Then
        Call enableEvent(False)
        Call decimalizeIndivValue(Target)
        Call setAtkParams(Target)
        Call enableEvent(True)
    '   わざ
    ElseIf tcol = IND_NormalAtk Or tcol = IND_SpecialAtk1 Or tcol = IND_SpecialAtk2 _
            Or tcol = IND_TargetNormalAtk Or tcol = IND_TargetSpecialAtk Then
        Call AtkChange(Target)
        Call enableEvent(False)
        Call setAtkParams(Target)
        Call enableEvent(True)
    End If
End Sub

'   特殊なフィルタの設定
Private Sub setFilter(ByVal Target As Range)
    Dim tcol, fcol As String
    Dim col  As Long
    Dim crit As Variant
    Dim ope As XlAutoFilterOperator
    ope = xlOr
    Me.Calculate
    With ListObjects(1)
        tcol = .HeaderRowRange.cells(1, Target.column).text
        '   タイプでフィルタ
        If tcol = IND_Type1 Then
            fcol = IND_FilterType
            crit = 1
        '   系統でフィルタ
        ElseIf tcol = IND_Species Then
            fcol = IND_Species
            If speciesExpectation(Target) Then
                crit = getEvolutionalyLine(Target.text, "111", "array")
                ope = xlFilterValues
            End If
        '   通常わざ
        ElseIf tcol = IND_NormalAtk Then
            fcol = IND_FilterNormalAtk
            crit = Target.value
        '   ゲージわざ
        ElseIf tcol = IND_SpecialAtk1 Then
            fcol = IND_FilterSpecialAtk
            crit = "=*" & Target.value & "*"
        Else
            Exit Sub
        End If
        If fcol <> "" Then
            col = .ListColumns(fcol).DataBodyRange.column
            If Target.text = "" Then
                .Range.AutoFilter Field:=col
            Else
                .Range.AutoFilter Field:=col, Criteria1:=crit, Operator:=ope
            End If
        End If
    End With
End Sub

'   タイプ2選択。入力規則を設定する
Private Sub Type2Selected(ByVal Target As Range)
    Dim lst As String
    lst = getType2Candidate(Target.Offset(0, -1).text)
    Call setInputList(Target, lst)
End Sub

'   タイプの変更、色を変える
Private Sub TypeChange(ByVal Target As Range)
    Dim tc As Long
    tc = getTypeIndex(Target.text)
    If tc Then
        tc = getTypeColor(tc)
        Target.Font.Color = tc
    Else
        Target.Font.ColorIndex = 1
    End If
End Sub

'   種族名の選択。入力規則を設定する。
Private Sub speciesSelected(ByVal Target As Range)
    Dim lst As String
    lst = getSpecCandidate(getColumn(IND_Type1, Target).text, _
                            getColumn(IND_Type2, Target).text)
    Call setInputList(Target, lst)
End Sub

'   種族名の変更。
Private Sub speciesChange(ByVal Target As Range)
    Dim setSpecies As Boolean
    Dim species As String
    Dim types As Variant
    setSpecies = True
    ' タイプの入力がなかったら予測候補の設定
    If getColumn(IND_Type1, Target).text = "" _
            And getColumn(IND_Type2, Target).text = "" Then
        setSpecies = speciesExpectation(Target)
    End If
    '   タイプの入力ありか、予測によって種族が確定していたら、タイプの取得
    If setSpecies Then
        species = getColumn(IND_Species, Target).text
        If setSpecies And species <> "" Then
            types = getSpcAttrs(species, Array(SPEC_Type1, SPEC_Type2, SPEC_Number))
        End If
    End If
    '   タイプが取得されていたら、タイプと番号を書き込み
    If IsArray(types) Then
        getColumn(IND_Type1, Target).value = types(0)
        getColumn(IND_Type2, Target).value = types(1)
        getColumn(IND_Number, Target).value = types(2)
    Else
        Union(getColumn(IND_Type1, Target), _
                getColumn(IND_Type2, Target), _
                getColumn(IND_Number, Target)).ClearContents
    End If
End Sub

'   わざの数値のセット
'   イベント制御は呼び出し側で行う
Private Sub setAtkParams(ByVal Target As Range, Optional ByVal force As IND_CalsFlags = 0)
    Dim tcol As String
    Dim self As Monster
    Dim enemy As Monster
    Dim atkIdx, cols As Variant
    Dim idx, atkClass, mode As Integer
    Dim curPL As Double
    Dim prPL As Double
    Dim changed(1), changedTargetAtk, changedCurPL, changedPrPL, proced As Boolean
    
    If Not getIndividual(Target, self) And force = 0 Then Exit Sub
    '   変化した列タイトルの取得と、その概要の真偽値
    tcol = ListObjects(1).HeaderRowRange.cells(1, Target.column).text
    changed(C_IdNormalAtk) = InStr(tcol, C_NormalAttack) > 0
    changed(C_IdSpecialAtk) = InStr(tcol, C_SpecialAttack) > 0
    changedTargetAtk = (tcol = IND_TargetNormalAtk Or tcol = IND_TargetSpecialAtk)
    changedPrPL = (tcol = IND_TargetPL)
    proced = (tcol = IND_Nickname)
    
    Call getMonsterByPower(enemy)   '   ダミー値
    curPL = self.PL
    prPL = val(getColumn(IND_prPL, Target).value)
    '   設定列タイトルの取得
    cols = getSettingColumns()
    '   書き込み
    For mode = 0 To 1
        Call setIndividualAttacks(self, mode, 2, Target)
        '   最初に一回わざのインデックスの取得。技が設定されている必要があるため
        If mode = 0 Then
            atkIdx = getAtkIndex(self, prPL)
        End If
        self.atkIndex(0).selected = atkIdx(C_IdNormalAtk, 0)
        self.atkIndex(1).selected = atkIdx(C_IdSpecialAtk, 0)
        '   現在のフラグがあるか、予測に関するパラメータの変更でも処理による更新でもない場合
        If (force And F_CURRENT) Or (Not changedTargetAtk _
                    And Not changedPrPL And Not proced) Then
            If mode = 1 Then
                self.PL = curPL
                Call calcMonPowers(self)
            End If
            If force Or Not changed(C_IdSpecialAtk) Then
                '   通常
                Call setDamageAndDPS(Target, cols(0)(mode), _
                        self, enemy, atkIdx(C_IdNormalAtk, 0))
            End If
            '   ゲージ
            Call setDamageAndDPS(Target, cols(1)(mode), _
                    self, enemy, atkIdx(C_IdSpecialAtk, 0))
            '   ゲージ2
            idx = atkIdx(C_IdSpecialAtk, 0) + 1
            If idx > self.atkIndex(1).upper Then idx = -1
            Call setDamageAndDPS(Target, cols(2)(mode), self, enemy, idx)
        End If
        '   予測
        self.PL = prPL
        Call calcMonPowers(self)
        self.atkIndex(0).selected = self.atkIndex(0).lower
        self.atkIndex(1).selected = self.atkIndex(1).lower
        If (force And F_PREDICTION) Or (Not changed(C_IdSpecialAtk) And Not proced) Then
            '   予測ジム通常
            Call setDamageAndDPS(Target, cols(3)(mode), _
                    self, enemy, atkIdx(C_IdNormalAtk, 1))
        End If
        If (force And F_PREDICTION) Or (Not changed(C_IdNormlaAtk) And Not proced) Then
            '   予測ジムゲージ
            Call setDamageAndDPS(Target, cols(4)(mode), _
                    self, enemy, atkIdx(C_IdSpecialAtk, 1))
        End If
        '   予測ジムcDPS
        self.atkIndex(0).selected = self.atkIndex(0).lower
        idx = 0
        If curPL = prPL And atkIdx(C_IdNormalAtk, 1) < 0 And atkIdx(C_IdSpecialAtk, 1) < 0 Then idx = -1
        Call setCDPS(Target, cols(5)(mode), self, enemy, idx)
    Next
    '   現在値と同条件のとき、リーグ別潜在値セット。
    If (force And F_CURRENT) Or (Not changedTargetAtk _
                And Not changedPrPL And Not proced) Then
        self.PL = curPL
        Call calcMonPowers(self)
        Call setPotential(Target, self, enemy)
    End If
End Sub


'   ダメージとDPSのセット
Private Sub setDamageAndDPS(ByVal Target As Range, ByVal columns As Variant, _
                ByRef self As Monster, ByRef enemy As Monster, _
                ByVal atkIdx As Integer)
    Dim col As Variant
    Dim idx As Integer
    Dim colLim As Integer
    Dim cdpss As CDpsSet
    colLim = UBound(columns)
    If self.PL > 0 And atkIdx >= 0 Then
        Call calcADamage(atkIdx, self, enemy, True)
        Call setAtkNameToCol(self, atkIdx, columns(0), Target)
        With self.attacks(atkIdx)
            idx = 1
            getColumn(columns(idx), Target).value = .damage
            idx = idx + 1
            '   対戦のゲージわざはDPSなし
            If self.mode <> C_IdMtc Or .class <> 1 Then
                getColumn(columns(idx), Target).value = .damage / .idleTime
                idx = idx + 1
            End If
            '   ゲージ技で列があればCDPS追記
            If .class = 1 And idx <= colLim Then
                self.atkIndex(1).selected = atkIdx
                cdpss = calcCDPS(self, enemy, True)
                getColumn(columns(idx), Target).value = cdpss.cDPS
                idx = idx + 1
                If idx <= colLim Then   '   周期
                    getColumn(columns(idx), Target).value = cdpss.Cycle
                End If
            End If
        End With
    Else
        Call eraseColumns(columns, Target)
    End If
End Sub

'   cDPSのセット
Private Sub setCDPS(ByVal Target As Range, ByVal columns As Variant, _
                ByRef self As Monster, ByRef enemy As Monster, _
                ByVal atkIdx As Integer)
    Dim maxCDPS, cyc As Double
    Dim maxAtkIdx(1) As Integer
    Dim colLim As Integer
    Dim cel As Range
    Dim cdpss As CDpsSet
    
    colLim = UBound(columns)
    '   インデックスが有効範囲ならcDPSの計算
    If self.PL > 0 And atkIdx > 0 And self.atkIndex(1).lower <= atkIdx And atkIdx <= self.atkIndex(1).upper Then
        self.atkIndex(1).selected = atkIdx
        cdpss = calcCDPS(self, enemy, True)
        getColumn(columns(0), Target).value = cdpss.cDPS
        If colLim >= 1 Then getColumn(columns(1), Target).value = self.attacks(self.atkIndex(0).selected).name
        If colLim >= 2 Then getColumn(columns(2), Target).value = self.attacks(self.atkIndex(1).selected).name
    '   0で有効なら最大値を計算
    ElseIf self.PL > 0 And atkIdx = 0 And self.atkIndex(1).lower >= 0 Then
        maxAtkIdx(0) = self.atkIndex(0).selected
        For atkIdx = self.atkIndex(1).lower To self.atkIndex(1).upper
            self.atkIndex(1).selected = atkIdx
            cdpss = calcCDPS(self, enemy, True)
            If maxCDPS < cdpss.cDPS Then
                maxCDPS = cdpss.cDPS
                cyc = cdpss.Cycle
                maxAtkIdx(1) = atkIdx
            End If
        Next
        getColumn(columns(0), Target).value = maxCDPS
        If colLim >= 1 Then Call setAtkNameToCol(self, maxAtkIdx(0), columns(1), Target)
        If colLim >= 2 Then Call setAtkNameToCol(self, maxAtkIdx(1), columns(2), Target)
        If colLim >= 3 Then getColumn(columns(3), Target).value = cyc
    '   それ以外は消す
    Else
        Call eraseColumns(columns, Target)
    End If
End Sub

'   他列に技名をセットする
Private Sub setAtkNameToCol(ByRef mon As Monster, ByVal atkIdx As Integer, _
                ByVal column As Variant, ByVal Target As Range)
    Dim cel As Range
    
    If column = "" Then Exit Sub
    Set cel = getColumn(column, Target)
    If atkIdx >= 0 Then
        With mon.attacks(atkIdx)
            cel.value = .name
            cel.Font.Color = getTypeColor(.itype)
        End With
    Else
        cel.value = ""
        cel.Font.ColorIndex = 1
    End If
End Sub

'   指定の列の値を消す
Private Sub eraseColumns(columns As Variant, ByVal Target As Range)
    Dim col As Variant
    For Each col In columns
        If col <> "" Then getColumn(col, Target).ClearContents
    Next
End Sub

'   技インデックスの取得。添字1は通常かゲージか、添字2は現在値か予測値か
Private Function getAtkIndex(ByRef self As Monster, ByVal prPL As Double)
    Dim atkIdx(1, 1) As Integer
    For atkClass = 0 To 1
        With self.atkIndex(atkClass)
            atkIdx(atkClass, 0) = -1        '   手持ち
            atkIdx(atkClass, 1) = .lower    '   目標技
            ' とにかく技がある
            If atkIdx(atkClass, 1) >= 0 Then
                ' 手持ちの技の探索。フラグが1の最初のもの
                For idx = .lower To .upper
                    If self.attacks(idx).flag = 1 Then atkIdx(atkClass, 0) = idx: Exit For
                Next
                '   目標に仮設定した先頭の技のフラグが2でないなら、目標技はない
                If self.attacks(atkIdx(atkClass, 1)).flag <> 2 Then
                    atkIdx(atkClass, 1) = atkIdx(atkClass, 0)   '   手持ち
                    '   予測PLがないか、PLと同じなら予測数値はなし
'                    If prPL < 1 Or self.PL = prPL Then
'                        atkIdx(atkClass, 1) = -1
'                    Else    '   予測PLでわざの数値をだす
                        'ときにゲージ1
'                        atkIdx(atkClass, 1) = atkIdx(atkClass, 0)
 '                   End If
                End If
            End If
        End With
    Next
    getAtkIndex = atkIdx
End Function

'   設定する列タイトルの配列
Private Function getSettingColumns()
            '   現在・通常
            '   現在・ゲージ1
            '   現在・ゲージ2
            '   予測・通常
            '   予測・ゲージ
            '   予測 ・cDPS
    getSettingColumns = Array( _
        Array( _
            Array("", IND_GymNormalAtkDamage, IND_GymNormalAtkTDPS), _
            Array("", IND_MtcNormalAtkDamage, IND_MtcNormalAtkTDPS) _
        ), Array( _
            Array("", IND_GymSpecialAtk1Damage, IND_GymSpecialAtk1TDPS, IND_GymSpecialAtk1CDPS, IND_GymSpecialAtk1Cycle), _
            Array("", IND_MtcSpecialAtk1Damage, IND_MtcSpecialAtk1CDPS, IND_MtcSpecialAtk1Cycle) _
        ), Array( _
            Array("", IND_GymSpecialAtk2Damage, IND_GymSpecialAtk2TDPS, IND_GymSpecialAtk2CDPS, IND_GymSpecialAtk2Cycle), _
            Array("", IND_MtcSpecialAtk2Damage, IND_MtcSpecialAtk2CDPS, IND_MtcSpecialAtk2Cycle) _
        ), Array( _
            Array(IND_prGymNormalAtkName, IND_prGymNormalAtkDamage, IND_prGymNormalAtkTDPS), _
            Array(IND_prMtcNormalAtkName, IND_prMtcNormalAtkDamage, IND_prMtcNormalAtkTDPS) _
        ), Array( _
            Array(IND_prGymSpecialAtkName, IND_prGymSpecialAtkDamage, IND_prGymSpecialAtkTDPS), _
            Array(IND_prMtcSpecialAtkName, IND_prMtcSpecialAtkDamage) _
        ), Array( _
            Array(IND_prGymCDPS, IND_prGymCDpsNormalAtkName, IND_prGymCDpsSpecialAtkName, IND_prGymCycle), _
            Array(IND_prMtcCDPS, IND_prMtcCDpsNormalAtkName, IND_prMtcCDpsSpecialAtkName, IND_prMtcCycle) _
    ))
End Function

'   潜在値のセット
'   monのわざの設定は変更される。
Private Sub setPotential(ByVal Target As Range, ByRef mon As Monster, ByRef enemy As Monster)
    Dim topCols, TCPlim, TCP As Variant
    Dim i As Integer
    Dim cpg, curPL As Double
    
    topCols = getColumnIndexes(Me, Array(IND_ptPL & "1", IND_ptPL & "2", IND_ptPL & "3"))
    Range(cells(Target.row, topCols(0)), cells(Target.row, _
            topCols(0) + (topCols(1) - topCols(0)) * 3 - 1)).ClearContents
    If mon.PL = 0 Then Exit Sub
    '   わざの設定とTCP最大/最小の取得
    cpg = getParameterForPotential(mon, TCPlim, Target)
    If cpg = 0 Then Exit Sub
    curPL = mon.PL
    '   リーグ別ループ
    For i = 0 To 2
        If TCPlim(i)(0) = 0 Then Exit For
        TCP = getPotentialTCP(mon, enemy, cpg, i)
        If curPL <= mon.PL Then
            With cells(Target.row, topCols(i))
                .value = mon.PL
                .Offset(0, 1).value = mon.CP
                .Offset(0, 2).value = TCP(1)
    '            .Offset(0, 3).value = (TCP(1) - TCPlim(1)) / (TCPlim(0) - TCPlim(1)) * 100
                .Offset(0, 3).value = TCP(0)
                .Offset(0, 4).value = (TCP(0) - TCPlim(i)(1)) / (TCPlim(i)(0) - TCPlim(i)(1)) * 100
            End With
        End If
    Next
End Sub

'   潜在値計算のためのパラメータの取得
'   戻り値はcpg
Public Function getParameterForPotential(ByRef mon As Monster, ByRef TCPlim As Variant, _
                                Optional ByVal Target As Range = Nothing) As Double
    Dim iv, sv, c, atks As Variant
    getParameterForPotential = 0
    sv = seachAndGetValues(mon.species, SA1_Name, shSpeciesAnalysis1, _
            Array(SA1_ReccTCP & "1", SA1_ReccTCPmin & "1", _
            SA1_ReccTCP & "2", SA1_ReccTCPmin & "2", _
            SA1_ReccTCP & "3", SA1_ReccTCPmin & "3", _
            SA1_CDST_NormalAtkName & "1", SA1_CDST_SpecialAtkName & "1"))
    If sv(0) = 0 Then Exit Function
    TCPlim = Array(Array(sv(0), sv(1)), Array(sv(2), sv(3)), Array(sv(4), sv(5)))
    If Target Is Nothing Then
        atks = Array(Array(sv(6)), Array(sv(7)))
    Else
        iv = getRowValues(Target, Array(IND_NormalAtk, IND_SpecialAtk1, IND_SpecialAtk2))
        If iv(0) = "" Or iv(1) = "" Then Exit Function
        atks = Array(Array(sv(6), iv(0)), Array(sv(7), iv(1), iv(2)))
    End If
    '   技の設定（最大,手持ち）
    Call setAttacks(C_IdMtc, mon, atks(0), atks(1))
    getParameterForPotential = mon.atkPower * Sqr(mon.defPower) * Sqr(mon.hpPower) / (getCPM(mon.PL) ^ 2) / 10
End Function

'   TCPの取得。わざ変、手持ち技、の順
'   mon.PL, mon.CPは変更される
Public Function getPotentialTCP(ByRef mon As Monster, ByRef enemy As Monster, _
                                ByVal cpg As Double, _
                                ByVal lidx As Integer) As Variant
    Dim TCP() As Double
    Dim cnt As Integer
    
    If lidx < 2 Then
        mon.PL = getPLbyCpg(Array(C_UpperCPl1, C_UpperCPl2)(lidx), cpg)
    Else
        mon.PL = 40
    End If
    Call calcMonPowers(mon)
    '   mTCPの計算
    '   わざ変
    ReDim TCP(2)
    cnt = 1
    mon.atkIndex(0).selected = mon.atkIndex(0).lower
    mon.atkIndex(1).selected = mon.atkIndex(1).lower
    Call calcChargeCount(mon)
    TCP(0) = calcTCP(mon, enemy)
    If mon.atkIndex(0).lower + 1 <= mon.atkIndex(0).upper Then
        cnt = 2
        '   手持ちわざ
        mon.atkIndex(0).selected = mon.atkIndex(0).lower + 1
        mon.atkIndex(1).selected = mon.atkIndex(1).lower + 1
        Call calcChargeCount(mon)
        TCP(1) = calcTCP(mon, enemy)
        If mon.atkIndex(1).lower + 2 <= mon.atkIndex(1).upper Then
            mon.atkIndex(1).selected = mon.atkIndex(1).lower + 2
            Call calcChargeCount(mon)
            TCP(2) = calcTCP(mon, enemy)
            If TCP(2) > TCP(1) Then TCP(1) = TCP(2)
        End If
    End If
    ReDim Preserve TCP(cnt - 1)
    getPotentialTCP = TCP
End Function

'   標準の並べ替え
Public Sub sortNormally()
    Call sortTable(shIndividual, Array(IND_Number, IND_Species, IND_Nickname))
End Sub

'   個体テーブルの調整。色を付ける
Sub alignIndividualTable()
    Call doMacro(msgstr(msgSetColorToTypesAndAttcksOnTheSheet, name))
    Call setTypeColorsOnTableColumns(shIndividual, Array(IND_Type1, IND_Type2))
    Call setTypeColorsOnTableColumns(shIndividual, _
                Array(IND_NormalAtk, IND_TargetNormalAtk), C_NormalAttack)
    Call setTypeColorsOnTableColumns(shIndividual, _
                Array(IND_SpecialAtk1, IND_SpecialAtk2, IND_TargetSpecialAtk), C_SpecialAttack)
    Call doMacro
End Sub

'   攻撃パラメータの再計算
Sub calcAllIndividualTable(Optional ByVal force As IND_CalsFlags = F_FORCEALL)
    Dim row As Long
    Call doMacro(msgCalculatingIndividualSheet)
    Calculate
    With ListObjects(1).DataBodyRange
        For row = 1 To .rows.count
            Call setAtkParams(.cells(row, 1), force)
        Next
    End With
    Call doMacro
End Sub

'   番号の再計算
Sub calcMonNumber()
    Dim row, col As Long
    Dim species As String
    col = getColumnIndex(IND_Number, ListObjects(1))
    With shIndividual.ListObjects(1)
        For row = 1 To .DataBodyRange.rows.count
            species = .ListColumns(IND_Species).DataBodyRange(row, 1).text
            .DataBodyRange.cells(row, col).value = getSpcAttr(species, SPEC_Number)
        Next
    End With
End Sub

'   エクスポート
Sub export()
    Dim fn As String
    fn = fileDialog("Text,*.txt", True, "PGInd")
    If fn = "" Then Exit Sub
    Call doMacro(msgExporting)
    With ListObjects(1)
        Call saveCsv(fn, getInputRange())
    End With
    Call doMacro
End Sub

'   表中のユーザー入力範囲
Private Function getInputRange() As Range
    Dim col As Long
    Dim datar As Range
    With ListObjects(1)
        col = .ListColumns(IND_fixPL).DataBodyRange.column
        With .DataBodyRange
            Set datar = Range(.cells(1, 1), .cells(.rows.count, col))
        End With
        Set getInputRange = Union(datar, _
                    .ListColumns(IND_TargetPL).DataBodyRange, _
                    .ListColumns(IND_TargetNormalAtk).DataBodyRange, _
                    .ListColumns(IND_TargetSpecialAtk).DataBodyRange)
    End With
End Function

'   インポート
Sub import()
    Dim fn As String
    fn = fileDialog("Text,*.txt")
    If fn = "" Then Exit Sub
    Call doMacro(msgImporting)
    Call dspProgress(msgImporting, 4)
    Call ClearData
    Call dspProgress
    Call loadCsv(fn, ListObjects(1).DataBodyRange.cells(1, 1))
    Call dspProgress(msgAligningIndividualSheet)
    Call alignIndividualTable
    Call dspProgress(msgCalculatingIndividualSheet)
    Calculate
    Call dspProgress(msgCalculatingIndividualSheet)
    Call calcAllIndividualTable
    Call dspProgress("", 0)
    Call doMacro
End Sub

'   データクリア（一行目は残す）
Sub ClearData()
    Dim i As Long
    Dim rng As Range
    '   2行目以降を消す
    With ListObjects(1).DataBodyRange
        If .rows.count > 2 Then
            Range(.cells(2, 1), .cells(.rows.count, .columns.count)).Delete
        End If
    End With
    Set rng = getInputRange()
    For i = 1 To rng.Areas.count
        rng.Areas(i).rows(1).ClearContents
    Next
    '   わざの数値の表示関数。クリアする。
    Call setAtkParams(ListObjects(1).DataBodyRange.cells(1, 1), F_FORCEALL)
End Sub

'   コントロールのクリア
Public Sub clearControls()
    chkSameType.value = False
    Range(IND_R_FilterIndicator).ClearContents
End Sub

'   PLの確認
Public Function checkPL()
    Dim cols, cel As Variant
    Dim row As Long
    Dim names As String
    cols = getColumnIndexes(ListObjects(1), Array(IND_Nickname, IND_PL))
    For Each cel In ListObjects(1).ListColumns(IND_PL).DataBodyRange
        If cel.value = 0 Then
            If names <> "" Then names = names & ", "
            names = names & cel.Offset(0, cols(0) - cols(1)).text
        End If
    Next
    checkPL = True
    If names <> "" Then
        MsgBox msgPLis0 & vbCrLf & names
        checkPL = False
    End If
End Function

'   リーグ別目標PLの設定
Public Sub setTargetPL(ByVal rng As Range)
    Dim row, col, TCP As Long
    Dim cols, attr As Variant
    Dim rrow(1) As Long
    With shIndividual.ListObjects(1)
        If rng Is Nothing Then
            Set rng = .DataBodyRange
        Else
            Set rng = Application.Intersect(rng, .DataBodyRange)
        End If
        rrow(0) = rng.row - .DataBodyRange.row + 1
        rrow(1) = rng.row + rng.rows.count - .DataBodyRange.row
    End With
    cols = Array(IND_CP, IND_PL, _
            IND_AtkPower, IND_DefPower, IND_HP2)
    col = getColumnIndex(IND_TargetPL, shIndividual)
    With shIndividual.ListObjects(1).DataBodyRange
        For row = rrow(0) To rrow(1)
            Call setATargetPL(.cells(row, col))
        Next
    End With
End Sub

'   リーグ別目標PL一行の設定
Private Sub setATargetPL(ByVal cel As Range)
    Dim PLs As Variant
    Dim i, cnt As Integer
    '   リーグ別PLを取得し空白を詰める
    PLs = getRowValues(cel, Array(IND_ptPL & "1", IND_ptPL & "2", IND_ptPL & "3"))
    cnt = 0
    For i = 0 To UBound(PLs)
        If PLs(i) > 0 Then
            If i <> cnt Then PLs(cnt) = PLs(i)
            cnt = cnt + 1
        End If
    Next
    If cnt = 0 Then Exit Sub
    '   PLが複数あるとき、同じ値が既に設定されて入れえ絵えばその次の値にする。
    If cnt > 1 Then
        For i = 0 To cnt - 2
            If PLs(i) = cel.value Then
                cel.value = PLs(i + 1)
                Exit Sub
            End If
        Next
    End If
    cel.value = PLs(0)
End Sub

'   自動ターゲットPL
Public Function SetAutoTargetPL(Optional ByVal genType As String = "", _
                            Optional ByVal level As Double = C_MaxPL) As Integer
    Dim atRng As Range
    Dim league As Integer
    Dim TCP As Long
    Dim cols As Variant
    Dim cel As Range
    Dim tPL As Double
    Set atRng = shIndividual.ListObjects(1).ListColumns(IND_AutoTarget).DataBodyRange
    '   クリア
    Select Case genType
        Case ""
            atRng.ClearContents
        Case C_Level
            atRng.value = level
        Case C_League1
            league = 1
            TCP = C_UpperCPl1
        Case C_League2
            league = 2
            TCP = C_UpperCPl2
        Case C_League3
            league = 3
            atRng.value = level
    End Select
    If league = 0 Then Exit Function
    If TCP > 0 Then
        atRng.ClearContents
        cols = Array(IND_CP, IND_PL, _
                IND_AtkPower, IND_DefPower, IND_HP2)
        For Each cel In atRng
            attr = getRowValues(cel, cols)
            If attr(1) > 0 Then
                tPL = getPLbyCP(TCP, attr(1), attr(2), attr(3), attr(4))
                If attr(1) <= tPL Then cel.value = tPL
            End If
        Next
    End If
    SetAutoTargetPL = league
End Function



