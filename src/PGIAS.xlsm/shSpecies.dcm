VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shSpecies"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True

'   わざを見るボタン
Private Sub btnNormalAtk_Click()
    Call ClickShowAttack
End Sub

'マップを見るボタン
Private Sub btnShowMap_Click()
    Dim species As String
    Dim stype As Variant
    species = getSpeciesFromCell(ActiveCell)
    If species = "" Then Exit Sub
    If chkSameType.Value Then
        stype = getSpcAttrs(species, Array(SPEC_Type1, SPEC_Type2))
        enableEvent False
        With shSpeciesMap.Range(R_SpeciesMapTypeSelect)
            .cells(1, 1).Value = stype(0)
            .cells(1, 2).Value = stype(1)
        End With
        enableEvent True
    End If
    shSpeciesMap.Activate
    shSpeciesMap.Range(R_SpeciesMapSpeciesSelect).Value = species
End Sub

'   種族テーブルの調整
Public Sub alignTableSpecies()
    Call doMacro(msgstr(msgSetColorToTypesAndAttcksOnTheSheet, name))
    Call sortType
    Call setTypeColorsOnTableColumns(shSpecies, Array(SPEC_Type1, SPEC_Type2))
    Call setTypeColorsOnTableColumns(shSpecies, Array(SPEC_NormalAttack, SPEC_NormalAttackLimited), 0, True)
    Call setTypeColorsOnTableColumns(shSpecies, Array(SPEC_SpecialAttack, SPEC_SpecialAttackLimited), 1, True)
    Call doMacro
End Sub

'   タイプのソート
Private Sub sortType()
    Dim ti(1), tmp As Long
    Dim col As Variant
    Dim cel(1) As Range
    col = getColumnIndexes(ListObjects(1), Array(SPEC_Type1, SPEC_Type2))
    With ListObjects(1).DataBodyRange
        For row = 1 To .rows.count
            Set cel(0) = .cells(row, col(0))
            Set cel(1) = .cells(row, col(1))
            ti(0) = getTypeIndex(cel(0).Text)
            ti(1) = getTypeIndex(cel(1).Text)
            If ti(1) > 0 And ti(0) > ti(1) Then
                cel(0).Value = cel(1).Value
                cel(1).Value = getTypeName(ti(0))
            End If
        Next
    End With
End Sub

'   技を追加する
'   commonOrLimited 0:normal, 1:limited, 2:query
Function addAttackToSpecies(ByVal atkClass As Variant, _
                            ByVal atkName As String, _
                            ByVal species As String, _
                            Optional ByVal commonOrLimited As Integer = 2) As Boolean
    Dim row, idx As Long
    Dim cel As Range
    Dim atks As Variant
    Dim stmp As String
    Dim colName As Variant
    Dim ans As Integer
    
    addAttackToSpecies = False
    If Not IsNumeric(atkClass) Then atkClass = getAtkClassIndex(atkClass)
    colName = Array(SPEC_NormalAttack, SPEC_NormalAttackLimited, _
                    SPEC_SpecialAttack, SPEC_SpecialAttackLimited)
    atks = getSpcAttrs(species, colName)
    If Not IsArray(atks) Then Exit Function
    '   既存かチェック
    stmp = atks(atkClass * 2) & "," & atks(atkClass * 2 + 1)
    If InStr("," & stmp & ",", "," & atkName & ",") > 0 Then Exit Function
    ' commonOrLimitedが2以上の場合は問い合わせして決定
    If commonOrLimited > 1 Then
        ans = MsgBox(msgstr(msgAttackIsLimited, Array(atkName)), vbYesNoCancel + vbQuestion)
        If ans = vbYes Then
            commonOrLimited = 1
        ElseIf ans = vbNo Then
            commonOrLimited = 0
        Else
            Exit Function
        End If
    End If
    atks = atks(atkClass * 2 + commonOrLimited)
    colName = colName(atkClass * 2 + commonOrLimited)
    atks = Split(atks, ",")
    idx = UBound(atks) + 1
    ReDim Preserve atks(idx)
    atks(idx) = atkName
    idx = idx - 1
    Do While idx >= 0
        If StrComp(atks(idx), atks(idx + 1), vbTextCompare) <= 0 Then Exit Do
        stmp = atks(idx): atks(idx) = atks(idx + 1): atks(idx + 1) = stmp
        idx = idx - 1
    Loop
    row = searchRow(species, SPEC_Name, shSpecies)
    With ListObjects(1).DataBodyRange
        Call setAtkNames(atkClass, atks, getColumn(colName, .cells(row, 1)))
    End With
    addAttackToSpecies = True
End Function

'   ソート
Public Sub sortNormally()
    Call sortTable(shSpecies, Array(SPEC_Number, SPEC_Name))
End Sub

'   ドーブルのわざ
Public Sub AttacksOfDouble()
    Dim row, trow, i, col, num, idx As Long
    Dim cols, sh, cel As Variant
    Dim testStr, stmp, atks() As String
    
    testStr = ",へんしん,しおみず,ねっとう,はめつのねがい," _
               & "だいちのちから,グロウパンチ,アシッドボム,グラスミキサー,"
    cols = Array(SPEC_NormalAttack, SPEC_SpecialAttack)
    sh = Array(shNormalAttack, shSpecialAttack)
    cols = getColumnIndexes(ListObjects(1), cols)
    trow = searchRow("ドーブル", SPEC_Name, ListObjects(1))
    For i = 0 To 1
        With sh(i).ListObjects(1)
            ReDim atks(.DataBodyRange.rows.count)
            num = 0
            For Each cel In .ListColumns(ATK_Name).DataBodyRange
                If InStr(testStr, "," & cel.Text & ",") < 1 Then
                    atks(num) = cel.Text
                    num = num + 1
                    idx = num - 2
                    Do While idx >= 0
                        If StrComp(atks(idx), atks(idx + 1), vbTextCompare) <= 0 Then Exit Do
                        stmp = atks(idx): atks(idx) = atks(idx + 1): atks(idx + 1) = stmp
                        idx = idx - 1
                    Loop
                End If
            Next
        End With
        ListObjects(1).DataBodyRange.cells(trow, cols(i)).Value = Join(atks, ",")
    Next
    With ListObjects(1).DataBodyRange
        For Each col In cols
            
        Next
    End With
End Sub
