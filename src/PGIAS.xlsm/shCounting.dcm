VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shCounting"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True

'   マップから全て計算ボタン
Private Sub btnCalcAll_Click()
    Call calcAllSheets
End Sub

'   クリアボタン
Private Sub btnClear_Click()
    Call clearAll
End Sub

'   作成ボタン
Private Sub btnMakeTables_Click()
    Call clearAll
    Call makeCountingTables
End Sub

'   期待個体テーブルの作成
Public Sub makeCountingTables()
    Dim shs As Variant
    Dim i, j As Integer
    
    Call doMacro(msgstr(msgMakingSheet, name))
    shs = getSheetsByName(CR_R_Settngs)
    For i = 0 To UBound(shs)
        Call insertTable(i)
        For j = 0 To 1
            Call MakeATable(shs(i), i * 2 + j, j)
        Next
    Next
    Call doMacro
End Sub

'   テーブル（現在・予測）挿入
Private Sub insertTable(ByVal idx As Integer)
    Dim width, row, col, i, j As Long
    Dim rng As Range
    
    row = NE_DataRow
    width = (NE_ColumnsNum + 1) * 2
    col = idx * width + 1
    '   テーブル上のヘッダのコピー
    If cells(row - 2, col).text = "" Then
        Range(cells(row - 2, 1), cells(row - 2, width)).copy
        cells(row - 2, col).Insert shift:=xlToRight
        Application.CutCopyMode = False
    End If
    '   現在・予測のループ
    For i = 0 To 1
        col = (idx * 2 + i) * (NE_ColumnsNum + 1) + 1
        '   テーブルがなかったら設定。ヘッダの文字列と幅も
        If cells(row, col).ListObject Is Nothing Then
            Set rng = Range(cells(row - 1, col), cells(row, col + NE_ColumnsNum - 1))
            tname = NE_TableName & Trim(idx) & "_" & Trim(i)
            ListObjects.Add(xlSrcRange, rng, , xlYes).name = tname
            ListObjects(tname).TableStyle = "TableStyleMedium" & Trim(5 + i * 2)
            For j = 0 To NE_ColumnsNum - 1
                With ListObjects(tname).HeaderRowRange.cells(1, j + 1)
                    .ColumnWidth = cells(1, j + 1).ColumnWidth
                    .value = Array(NE_Name, NE_Type, NE_EntryNum, NE_FlagedNum, _
                                NE_PL, NE_prPL, NE_Candies, NE_Sands)(j)
                    .Font.Bold = True
                    .Font.Color = 0
                End With
            Next
            Call switchHeaderSuffixesATable(ListObjects(tname), False)
        End If
    Next
    '   現在と予測のテーブルの間の幅
    cells(row, col - 1).ColumnWidth = cells(row, NE_ColumnsNum + 1).ColumnWidth
End Sub

'   テーブル作成
Private Sub MakeATable(ByVal sh As Worksheet, ByVal idx As Long, _
                Optional ByVal isPredict As Boolean = True)
    Dim cnt As Object
    Dim cel As Range
    Dim nickname As Variant
    Dim attr, types, resources As Variant
    Dim i As Integer
    Dim title As String
    
    Set cnt = getCountOfRanked(sh, isPredict)
    Set cel = cells(NE_DataRow, idx * (NE_ColumnsNum + 1) + 1)
    If isPredict Then title = C_Prediction Else title = C_Current
    '   表タイトルの書き込み
    cel.Offset(-3, col).value = sh.name
    cel.Offset(-3, col).Font.Bold = True
    cel.Offset(-2, col).value = title
    '   カウントオブジェクトのキーごとのループ
    For Each nickname In cnt.Keys
        '   ニックネームより属性の取得
        attr = seachAndGetValues(nickname, IND_Nickname, shIndividual, _
                Array(IND_PL, IND_prPL, IND_Candies, IND_Sands, IND_Type1, IND_Type2))
        types = Array(attr(4), attr(5))
        '   予測であったら、予測PLは対策シートのものを利用
        If isPredict Then
            attr(1) = cnt(nickname)(0)  'prPL
            resources = getResourceRequirment(attr(0), attr(1))
            attr(2) = resources(0)
            attr(3) = resources(1)
        End If
        cel.value = nickname
        Call setTypeToCell(types, cel.Offset(0, 1), True)
        cel.Offset(0, 2).value = cnt(nickname)(1)
        cel.Offset(0, 3).value = cnt(nickname)(2)
        For i = 0 To 3
            cel.Offset(0, 4 + i).value = attr(i)
        Next
        Set cel = cel.Offset(1, 0)
    Next
    Call sortTable(cel.Offset(-1, 0).ListObject, NE_FlagedNum, xlDescending)
End Sub

'   全てテーブルを消す
Public Sub clearAll()
    Dim lo As ListObject
    Dim rcol(1) As Long
    
    If ListObjects.count > 2 Then
        rcol(0) = (NE_ColumnsNum + 1) * 2
        rcol(1) = (NE_ColumnsNum + 1) * ListObjects.count
        Range(cells(1, rcol(0)), cells(1, rcol(1))).EntireColumn.Delete
    End If
    While ListObjects.count > 0
        Call clearATable(1)
    Wend
    Range(NE_CalcAllTime).ClearContents
End Sub

'   一つテーブルを消す
Private Sub clearATable(ByVal idx As Integer)
    Dim rng As Range
    With ListObjects(idx)
        Set rng = .DataBodyRange
        .Delete
    End With
    rng.Clear
    rng.cells(1, 1).Offset(-3, 0).ClearContents
End Sub

Public Sub calcAllSheets()
    Dim stime As Double
    Dim shs As Variant
    Dim i, flag As Integer
    
    stime = Timer
    Call doMacro(msgstr(msgProcessing, Array(cmdCalculate, msgAllInDivAna)))
    '   マップの作成
    shs = getSheetsByName(IMAP_R_Settings)
    For i = 0 To UBound(shs)
        flag = 0
        If i = 0 Then flag = flag Or FMAP_FIRST
        If i = UBound(shs) Then flag = flag Or FMAP_LAST
        Call shs(i).MakeMap(flag)
    Next
    '   対策の計算
    shs = getSheetsByName(CR_R_Settngs)
    For i = 0 To UBound(shs)
        Call SetAllRanking(shs(i))
    Next
    '   集計
    Call clearAll
    Call makeCountingTables
    Call setTimeAndDate(Range(NE_CalcAllTime), stime)
    Call doMacro
End Sub
